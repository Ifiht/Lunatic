# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Overall Status

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  MC_VERSION: 1.21.4

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: 'gradle'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4 # v4.0.0

      - name: Execute Gradle build
        run: ./gradlew build

      - name: Upload plugin JAR
        uses: actions/upload-artifact@v4
        with:
          name: plugin-jar
          path: build/libs/*all.jar
          retention-days: 4

      - name: Clean the Server Plugins Cache
        run: ./gradlew cleanPaperPluginsCache


  dependency-submission:

    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: 'gradle'


  test-paper:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download plugin JAR
        uses: actions/download-artifact@v4
        with:
          name: plugin-jar
          path: plugins
      - name: Set up Docker
        uses: docker/setup-buildx-action@v3
      - name: Run PaperMC Server in Docker with plugin
        run: |
          docker run -d \
          --name test-paper-server \
          -e EULA=TRUE \
          -e TYPE=PAPER \
          -e ONLINE_MODE=FALSE \
          -e VERSION=${MC_VERSION} \
          -e MAX_TICK_TIME=-1 \
          -e JVM_DD_OPTS=disable.watchdog:true \
          -v ${{ github.workspace }}/plugins:/plugins \
          -p 127.0.0.1:25565:25565 \
          itzg/minecraft-server:latest
          echo "Starting Paper server..."
          sleep 2
      - name: Delayed server health check
        run: |
          echo "Waiting for server to become healthy..."
          for i in {1..20}; do
            healthy=$(docker exec test-paper-server mc-monitor status --host 127.0.0.1 || echo "unhealthy")
            echo "Status: $healthy"
            if [[ "$healthy" == *"online"* ]]; then
              echo "Server is online!"
              docker exec -i test-paper-server rcon-cli "luma cyclemoonstates"
              exit 0
            fi
            sleep 6
          done
          echo "Server failed health check, timeout."
          docker logs test-paper-server
          exit 1
      - name: Stop the server
        run: docker stop test-paper-server || true
      - name: Retrieve server logs
        run: docker logs test-paper-server
      - name: Check Minecraft server logs for errors
        run: |
          echo "Checking container logs for errors..."
          LOG_OUTPUT=$(docker logs test-paper-server 2>&1)
          ERROR_LINES=$(echo "$LOG_OUTPUT" | grep 'ERROR]:' || true)
          if [ -n "$ERROR_LINES" ]; then
            echo "Errors were found in the server logs:"
            echo "$ERROR_LINES"
            exit 1
          else
            echo "No errors found in the container logs."
          fi
      - name: Stop and clean up
        if: always()
        run: docker rm -f test-paper-server || true


  test-purpur:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download plugin JAR
        uses: actions/download-artifact@v4
        with:
          name: plugin-jar
          path: plugins
      - name: Set up Docker
        uses: docker/setup-buildx-action@v3
      - name: Run PaperMC Server in Docker with plugin
        run: |
          docker run -d \
          --name test-purpur-server \
          -e EULA=TRUE \
          -e TYPE=PURPUR \
          -e VERSION=${MC_VERSION} \
          -e MAX_TICK_TIME=-1 \
          -e JVM_DD_OPTS=disable.watchdog:true \
          -v ${{ github.workspace }}/plugins:/plugins \
          -p 127.0.0.1:25565:25565 \
          itzg/minecraft-server:latest
          echo "Starting Purpur server..."
          sleep 2
      - name: Delayed server health check
        run: |
          echo "Waiting for server to become healthy..."
          for i in {1..20}; do
            healthy=$(docker exec test-purpur-server mc-monitor status --host 127.0.0.1 || echo "unhealthy")
            echo "Status: $healthy"
            if [[ "$healthy" == *"online"* ]]; then
              echo "Server is online!"
              docker exec -i test-purpur-server rcon-cli "luma cyclemoonstates"
              exit 0
            fi
            sleep 6
          done
          echo "Server failed health check, timeout."
          docker logs test-purpur-server
          exit 1
      - name: Stop the server
        run: docker stop test-purpur-server || true
      - name: Retrieve server logs
        run: docker logs test-purpur-server
      - name: Check Minecraft server logs for errors
        run: |
          echo "Checking container logs for errors..."
          LOG_OUTPUT=$(docker logs test-purpur-server 2>&1)
          ERROR_LINES=$(echo "$LOG_OUTPUT" | grep 'ERROR]:' || true)
          if [ -n "$ERROR_LINES" ]; then
            echo "Errors were found in the server logs:"
            echo "$ERROR_LINES"
            exit 1
          else
            echo "No errors found in the container logs."
          fi
      - name: Stop and clean up
        if: always()
        run: docker rm -f test-purpur-server || true


  test-folia:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download plugin JAR
        uses: actions/download-artifact@v4
        with:
          name: plugin-jar
          path: plugins
      - name: Set up Docker
        uses: docker/setup-buildx-action@v3
      - name: Run PaperMC Server in Docker with plugin
        run: |
          docker run -d \
          --name test-folia-server \
          -e EULA=TRUE \
          -e TYPE=FOLIA \
          -e VERSION=1.21.2 \
          -e MAX_TICK_TIME=-1 \
          -e JVM_DD_OPTS=disable.watchdog:true \
          -v ${{ github.workspace }}/plugins:/plugins \
          -p 127.0.0.1:25565:25565 \
          itzg/minecraft-server:latest
          echo "Starting Folia server..."
          sleep 2
      - name: Delayed server health check
        run: |
          echo "Waiting for server to become healthy..."
          for i in {1..20}; do
            healthy=$(docker exec test-folia-server mc-monitor status --host 127.0.0.1 || echo "unhealthy")
            echo "Status: $healthy"
            if [[ "$healthy" == *"online"* ]]; then
              echo "Server is online!"
              docker exec -i test-folia-server rcon-cli "luma cyclemoonstates"
              exit 0
            fi
            sleep 6
          done
          echo "Server failed health check, timeout."
          docker logs test-folia-server
          exit 1
      - name: Stop the server
        run: docker stop test-folia-server || true
      - name: Retrieve server logs
        run: docker logs test-folia-server
      - name: Check Minecraft server logs for errors
        run: |
          echo "Checking container logs for errors..."
          LOG_OUTPUT=$(docker logs test-folia-server 2>&1)
          
          ERROR_LINES=$(echo "$LOG_OUTPUT" | grep 'ERROR]:' || true)
          if [ -n "$ERROR_LINES" ]; then
            echo "Errors were found in the server logs:"
            echo "$ERROR_LINES"
            exit 1
          else
            echo "No errors found in the container logs."
          fi
      - name: Stop and clean up
        if: always()
        run: docker rm -f test-folia-server || true